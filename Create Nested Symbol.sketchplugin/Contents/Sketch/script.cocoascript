// Display an error alert
function alert(msg, title) {
	title = title || "alert"
	var app = [NSApplication sharedApplication]
	[app displayDialog:msg withTitle:title]
}

// Display an error alert and exit
function exitWithAlert(message, title) {
  alert(message, title)
  throw(nil) // exit the plugin
}

var createSymbol = function(context) {
	try {
		// Begin validation of selection
	
		// Ensure at least one layer is selected
		var selection = context.selection
		// Ensure at least one layer is selected
		if ([selection count] < 1) {
			exitWithAlert('Select at least one layer to create a symbol.', 'Select Layer(s)')
		}
		
		var layer = [selection objectAtIndex:0]
		
		// Layer is already a symbol
		if (layer.isSymbol()) {
			exitWithAlert('This layer is already a symbol.', 'Already Symbol')
		}
		
		var doc = context.document
		
		// Prompt user for symbol name
		var symbolName = [doc askForUserInput:"Symbol Name" initialValue:""];
		if (symbolName == "") {
			exitWithAlert('Enter a name for the symbol.', 'Name Required')
		}
		
		var symbols = doc.documentData().layerSymbols()
		
		if (layer instanceof MSLayerGroup) { // Layer is already a group
			
			// Add group to symbols
			symbols.addSymbolWithName_firstInstance(symbolName, layer)
			
			// Toggle selection to refresh UI
			layer.setIsSelected(false)
			layer.setIsSelected(true)
			
		} else { // Create a new group from selection
			
			// Group layers
			var groupAction = doc.actionsController().actionWithName("MSGroupAction");
			if (!groupAction.validate()) {
				exitWithAlert('Could not group layers.')
			}
			groupAction.group(nil)
			
			// Verify group exists
			var group = layer.parentGroup()
			if (!group) {
				exitWithAlert('Could not group layers.')
			}
			
			// Set group name to symbol name
			group.setName(symbolName)
			
			// Add group to symbols
			symbols.addSymbolWithName_firstInstance(symbolName, group)
		}
	} catch(e) {
		log(e)
	}
};