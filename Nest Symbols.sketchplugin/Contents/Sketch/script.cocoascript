// Display an error alert
function alert(msg, title) {
	title = title || "alert"
	var app = [NSApplication sharedApplication]
	[app displayDialog:msg withTitle:title]
}

// Display an error alert and exit
function exitWithAlert(message, title) {
  alert(message, title)
  throw(nil) // exit the plugin
}

function invalidSelection() {
	exitWithAlert('Select a group to convert it to a symbol.', 'Selection Must Be A Group')
}

function groupLayers(layers, groupName, parentGroup) {
	var group = MSLayerGroup.new()
	group.setName(groupName)
	
	for (var i=0; i < [layers count]; i++) {
		var layer = [layers objectAtIndex:i]
		layer.parentGroup().removeLayer(layer)
		layer.setIsSelected(false)
	}
	
	group.addLayers([layer])
	group.resizeRoot(true)
	group.setIsSelected(true)
	parentGroup.addLayers([group])
	
	return group
}

var createSymbol = function(context) {
	try {
		// Begin validation of selection
	
		// Ensure there's only one layer selected
		var selection = context.selection
		if ([selection count] != 1) {
			exitWithAlert('Select exactly one layer to convert it to a symbol.', 'Selection One Layer')
		}
		
		// log(selection)
		
		// Ensure at least one layer is selected
// 		if ([selection count] < 1) {
// 			exitWithAlert('Select at least one layer to create a symbol.', 'Select Layer(s)')
// 		}
		
		var layer = [selection objectAtIndex:0]
		
		// Layer is already a symbol
		if (layer.isSymbol()) {
			exitWithAlert('This layer is already a symbol.', 'Already Symbol')
		}
		
		var doc = context.document
		
		// Prompt user for symbol name
		var symbolName = [doc askForUserInput:"Symbol Name" initialValue:""];
		
		var group
		if (layer instanceof MSLayerGroup) { // Layer is already a group
			group = layer
		} else { // Create a new group from selection
			var layers = [NSArray arrayWithObject:layer]
			group = groupLayers(layers, symbolName, layer.parentGroup())
		}

		var symbols = doc.documentData().layerSymbols()
		symbols.addSymbolWithName_firstInstance(symbolName, group)
		
// 		alert("done")
	} catch(e) {
		log(e)
	}
};